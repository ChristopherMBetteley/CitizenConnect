@model CitizenConnect.Models.ReportView

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        <!-- API call for Autocomplete places -->
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA-UEiyhrkeVKo2UfwX3WNKqToGvgL9yFc&libraries=places"></script>
    <!-- script to autocomplete address as entered -->
    <script type="text/javascript">
        google.maps.event.addDomListener(window, 'load', function () {
            var places = new google.maps.places.Autocomplete(document.getElementById('address'));
            google.maps.event.addListener(places, 'place_changed', function () {
                var place = places.getPlace();
                //var MyplaceID = place_id;
                var address = place.formatted_address;
                var latitude = place.geometry.location.lat();
                var longitude = place.geometry.location.lng();
                $("#hdnLatitude").val(latitude);
                $("#hdnLongitude").val(longitude);
                $("#hdnAddress").val(address)


                //var mesg = "Address: " + address;
                //mesg += "\nLatitude: " + latitude;
                //mesg += "\nLongitude: " + longitude;
                //alert(mesg);
                addressSearch();

            });
        });
    </script>

    <div class="form-horizontal">
        <h4>ReportView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <span>Location:</span>
        <input type="text" id="address" style="width: 250px" placeholder="Enter a location" />
       

        @Html.HiddenFor(model => model.Longitude, new { id = "hdnLongitude"})
        @Html.HiddenFor(model => model.Latitude, new { id = "hdnLatitude",})
        @Html.HiddenFor(model => model.AddressString, new { id = "hdnAddress", })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@*<div class="form-group">
        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReportTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReportTypeID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReportTypeID, "", new { @class = "text-danger" })
        </div>
    </div>*@