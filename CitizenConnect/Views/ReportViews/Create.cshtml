@model CitizenConnect.Models.ReportView

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map_canvas'), {
                zoom: 14,
                center: new google.maps.LatLng(41.500, -81.694),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            var myMarker = new google.maps.Marker({
                position: new google.maps.LatLng(41.500, -81.694),
                draggable: true,
                map: map
            });
            google.maps.event.addListener(myMarker, 'dragend', function (evt) {
                document.getElementById('current').innerHTML;
                var latitude = evt.latLng.lat();
                var longitude = evt.latLng.lng();
                $("#hdnLatitude").val(latitude);
                $("#hdnLongitude").val(longitude);
});

                google.maps.event.addListener(myMarker, 'dragstart', function (evt) {
                    document.getElementById('current').innerHTML;
                });

            



            map.setCenter(myMarker.position);
            myMarker.setMap(map_canvas);
        }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA-UEiyhrkeVKo2UfwX3WNKqToGvgL9yFc&callback=initMap"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>


    <div class="form-horizontal">
        <h4>ReportView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <section>
            <div id='map_canvas'></div>

            <div id="current"></div>
            <p id="hdnAddress" />
            @Html.HiddenFor(model => model.Longitude, new { id = "hdnLongitude" })
            @Html.HiddenFor(model => model.Latitude, new { id = "hdnLatitude", })
            @Html.HiddenFor(model => model.AddressString, new { id = "hdnAddress", })

        </section>
        <div class="form-group">
            @Html.LabelFor(model => model.ReportType.ReportTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReportTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReportTypeID, "", new { @class = "text-danger" })
            </div>
        </div> @*Report Type Dropdown*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>  @*Submit Button*@
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>